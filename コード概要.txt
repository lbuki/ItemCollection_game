Asset/GameScript 内のコードの説明
・CameraController
　カメラをコントロールするためのコードで、
　キャラクターを中心に上下左右に回転する。

　大まかな構造を説明すると、
　上下の回転はキャラクターの中心に回転し、
　左右の回転は"pivot"という透明な物体を中心に回転する。
　pivotのx,z座標はの値がキャラクターのx,zと同じで、
　y座標がカメラのy座標と同じにしている。
　

・CharaController
　移動・ジャンプ・スタミナ・キャラクター消滅の管理をする。
　移動に関してはスマホで操作するためにスワイプした距離と方向を認識し、
　それをキャラクターの移動速度と向きに反映する。

　また、マルチタッチの実装方法が分からず、
　複数箇所画面をタッチすると移動が正確にできなくなったため、
　画面左半分と右半分に透明なボタンを置くことで左右半分の操作を分離して
　誤魔化している。
　プログラム最下部の"button","Touch"といったメソッドは、
　これらボタンが押されているかを確認するものである。

　ジャンプの着地時に地面との衝突判定を用いてアニメーションを操作すると、
　"ジャンプ中→着地"or"ジャンプ中→走る"のアニメーションが
　ワンテンポ遅れるため、高校物理の運動方程式から
　ジャンプの最高到達点に達した時に地面との距離を計測、着地までに要する
　時間を計算し、
　"着地アニメーションに要する時間を差し引いた秒数"が経過した時に
　アニメーションを再生する。
　なお、"ある秒数が経過した後に処理を実行する"プログラムは今回全て
　非同期処理のコルーチンを用いている。
　その理由は、非同期処理でないと他のプログラムを止めてしまい、
　"その間何もしない"という状態を作るとゲームの使用上困るため。

　移動手段はキャラクター正面方向に一定の物理的な力を
　加えることで実装している。
　向きに関しては移動とは別の部分で変更している。
　

・EnemyController
　プレイヤーが追いかけられる条件を満たすと、
　プレイヤーに向かって一目散に駆け寄り攻撃のスクリプトを実行する。
　攻撃が失敗すると、1秒ほど硬直した後に再度追跡を始める。


・GameDirector
　ゲーム全般の設定などを行う。
　ゲームのデバイス(スマホorパソコン)の設定、各種テキスト、
　画像の表示、BGMの切り替え、SEの実行、シーンの切り替え、
　ゲームクリアの確認、プレイヤーの消滅エフェクトの実行など。
　

・ItemManager
　プレイヤーが近づいた際にアイテムを消滅させ、回収した演出をする他、
　GameDirectorの変数に現在の獲得アイテム総数を伝達する。
　また、回収アイテムを展示品のようにフワフワ浮かせつつ、
　一定速度でクルクル回している。


・ObjName
　本ゲーム内で用いるオブジェクトやスクリプトのファイル名や、
　その参照先ををまとめている。

　理由は、オブジェクト名やファイル名を呼び出すコードが
　様々なファイルに点在していると、変更時に手間であると判断したためである。
　また、GetComponentやFind関数は全探索などの
　"処理に時間を要するもの"を含んでおり、毎フレーム呼び出すと重くなるため、
　本ファイル内で一度実行し、必要な場所では本ファイルを参照すると
　処理が軽減されると考えたため。


・SercherController (SearcherControllerのスペルミス)
　プレイヤーが近づくと一目散に追跡を始めるオブジェクトを操作する。
　追跡の他、何かに衝突するまで前進し、衝突すると振り返って再度前進する。
　振り向く角度は乱数を用いて45度〜315度のいずれか、180度固定。



Asset/TitleScript 内のコードの説明
　特になし。
　タイトル画面があまりにも寂しかったので、
　回転する土台の上にキャラクターを雨のように降らせる
　機能を実装した。
















